--
-- PostgreSQL database dump
--

-- Dumped from database version 10.19 (Ubuntu 10.19-0ubuntu0.18.04.1)
-- Dumped by pg_dump version 10.19 (Ubuntu 10.19-0ubuntu0.18.04.1)

SET statement_timeout = 0;
SET lock_timeout = 0;
SET idle_in_transaction_session_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SELECT pg_catalog.set_config('search_path', '', false);
SET check_function_bodies = false;
SET xmloption = content;
SET client_min_messages = warning;
SET row_security = off;

--
-- Name: plpgsql; Type: EXTENSION; Schema: -; Owner: 
--

CREATE EXTENSION IF NOT EXISTS plpgsql WITH SCHEMA pg_catalog;


--
-- Name: EXTENSION plpgsql; Type: COMMENT; Schema: -; Owner: 
--

COMMENT ON EXTENSION plpgsql IS 'PL/pgSQL procedural language';


SET default_tablespace = '';

SET default_with_oids = false;

--
-- Name: members; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.members (
    id integer NOT NULL,
    user_name character varying(255) NOT NULL,
    fio character varying(255) NOT NULL
);


ALTER TABLE public.members OWNER TO postgres;

--
-- Name: members_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.members ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.members_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: person; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.person (
    id integer NOT NULL,
    first_name character varying(255),
    last_name character varying(255),
    patronymic character varying(255)
);


ALTER TABLE public.person OWNER TO postgres;

--
-- Name: person_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.person ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.person_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: record; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.record (
    id integer NOT NULL,
    member integer NOT NULL,
    tournament integer NOT NULL
);


ALTER TABLE public.record OWNER TO postgres;

--
-- Name: record_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.record ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.record_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: tournament; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.tournament (
    id integer NOT NULL,
    date timestamp with time zone,
    rating_range integer,
    address character varying(255),
    phone character varying(20),
    organizer_name character varying(255),
    cost numeric,
    max integer,
    name character varying(255),
    division character varying(255)
);


ALTER TABLE public.tournament OWNER TO postgres;

--
-- Name: tournament_id_seq; Type: SEQUENCE; Schema: public; Owner: postgres
--

ALTER TABLE public.tournament ALTER COLUMN id ADD GENERATED ALWAYS AS IDENTITY (
    SEQUENCE NAME public.tournament_id_seq
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);


--
-- Name: users; Type: TABLE; Schema: public; Owner: postgres
--

CREATE TABLE public.users (
    user_name character varying(255) NOT NULL,
    password character varying(255) NOT NULL,
    role character varying(255) DEFAULT 'ROLE_USER'::character varying NOT NULL
);


ALTER TABLE public.users OWNER TO postgres;

--
-- Data for Name: members; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.members (id, user_name, fio) FROM stdin;
1	user	Первый пользователь
3	bbb@bb.ru	Tarasov Vasilii Dmotrievich
4	vvv@vvv.ua	nnn cccc vvvv
5	ffff@ffff.ff	fff fff fff
6	zzzzz@zzz.zz	zzz zzz zzz
7	yyy@yyy.yy	yyy yyy yyy
8	mmm@mmm.mm	mmm mmm mmm
9	sss@ss.ss	bbb kkk oo
10	ooo@oo.oo	fff ffff fff
11	uuu@uu.uu	uuu uuu uuu
13	qq@qq.qq	qqq qqq qqq
14	vasilii@vasilii.com	vasilii vasilii vasilii
15	qwerty@q.q	gfjdgfn gmm
16	admin@admin.admin	admin
17	pp@pp.pp	ppp ppp ppp
2	aaaa@aaa.com	Тарасов Василий Дмитриевич
18	some@some.some	some some man
19	new@new.new	new new new
20	old@old.old	old old old
24	meg0009@mail.ru	Тарасов Василий Дмитриевич
\.


--
-- Data for Name: person; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.person (id, first_name, last_name, patronymic) FROM stdin;
1	Василий	Тарасов	Дмитриевич
2	Mike	Wazowski	\N
3	Дмитрий	Тарасов	Владимирович
4	Алексей	Тарасов	Дмитриевич
5	Татьяна	Тарасова	Дмитриевна
6	Дмитрий	Захаров	Сергеевич
7	Анна	Харитонова	Сергеевна
8	Алина	Штокман	Анатольевна
9	Лев	Толстой	Николаевич
10	Александер	Пушкин	Сергеевич
11	Невил	Долгопупс	
12	Гарри	Поттер	
13	Северус	Снейп	
14	Марина	Черноперова	Генадьевна
15	Анна	Шапошникова	Сергеевна
16	Иван	Иванов	Иванович
17	Тарас	Тарасов	Тарасович
18	Анатолий	Харько	Анатольевич
19	Анатолий	Харько	Анатольевич
20	Иван	Харитонова	Иванович
21	Никита	Антипов	Николаевич
22	Алексей	Лиходеев	Дмитриевич
23	Анастасия	Куликова	Викторовна
24	Генадий	Букин	Петрович
25	аааа	аааа	ааа
26	nnnnnn	nnnnnnn	nnnnnnn
\.


--
-- Data for Name: record; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.record (id, member, tournament) FROM stdin;
11	24	1
12	3	1
18	9	1
19	10	1
22	4	1
23	5	1
24	8	1
25	13	1
27	14	2
\.


--
-- Data for Name: tournament; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.tournament (id, date, rating_range, address, phone, organizer_name, cost, max, name, division) FROM stdin;
1	2022-07-13 15:00:00+03	5	Нижний Новгород	+79999999999	Василий	150	5	Номер1	Дивизион1
2	2023-03-01 09:00:00+03	3	Нижний	+79101351111	Ольга	200	10	Номер2	Дивизион1
5	2022-03-30 12:12:00+03	5	Нижний Новгород	+79999999999	Ольга	20	3	номер5	Дивизион2
3	2022-04-07 16:16:00+03	9	Нижний Н	+79101351111	Максим	15	7	Номер3	Дивизион3
\.


--
-- Data for Name: users; Type: TABLE DATA; Schema: public; Owner: postgres
--

COPY public.users (user_name, password, role) FROM stdin;
admin	$2a$12$1V4SumHMJ./O9nLi24XC6O9bWT8.5BdO.HqDE6y5RYB7gu07JCZwS	ROLE_ADMIN
user	$2a$10$3JjivZvwWHKEVqACd5BZT.D.F3VwA.YHqtlJX4Oe8gv7m7qqGZSDO	ROLE_USER
user2	$2a$10$8HZjXlR6S4hYDdWD9Jijp.TWXg7Xs.8XGG/Ae18XfYiKLOJeCnOh2	ROLE_USER
bbb@bb.ru	$2a$10$QN7ZWVWgD0TYOKcVzm/IreLXQUfds7tErWeDrfMNcQ5ED32juR7z2	ROLE_USER
vvv@vvv.ua	$2a$10$L7opOpZ9p5SorkiihMpaF.wpVL/AeaZr8Ij8TFkQCm1793cMSC2bW	ROLE_USER
ffff@ffff.ff	$2a$10$3b2joCK7UZ0Lzty7W0lQvept7g/nsJufpzAPzJVytE3Gdmuh6nmxW	ROLE_USER
zzzzz@zzz.zz	$2a$10$ZlV/Y5sOPkDYclw19SE3MeaLEoyAktzvac6kyfYMTwbEEdKst2Ohq	ROLE_USER
yyy@yyy.yy	$2a$10$zuTlfMCzcTj4IKhuPFqjyuMXg6fRPkuNmPm/.NPBwiXNUbI319WtC	ROLE_USER
mmm@mmm.mm	$2a$10$AMW2qorB6FnHuMO9pcnB0ulmZVyql.Qmx/Vx9wHi3ZYbu1C.pdGn6	ROLE_USER
sss@ss.ss	$2a$10$LCUUJKQCbSJmoLzCn2zGn.vCNnseT4j5ThwmkwpQs1mAMVbFtb7e6	ROLE_USER
ooo@oo.oo	$2a$10$ISlcstj201sbM7S49RqsC.JdTzssGslyBgFz/22i2cup5MHC7Fcfu	ROLE_USER
uuu@uu.uu	$2a$10$BLWy13.be1ql6OEL72VRweJ51e98LOuNrzOR0K8vpykjM6g/HuzqG	ROLE_USER
test@test.test	$2a$10$UdSaQnYid86VQslNsd3mouuBCCOwTF4f0lzv397VhqDIKQaZX0JyC	ROLE_USER
test2@test.test	$2a$10$CTiZ2XNXk5Pzw6bo442qv.rFcGjPKO68RTvchNswK9FdRc562Bnqi	ROLE_USER
qq@qq.qq	$2a$10$g7cjZdKKA7iLDZxBJHQD2OM.xXwZwVoZBwWBd8Fx.gy6eKd32WkJm	ROLE_USER
vasilii@vasilii.com	$2a$10$fjL6.Sl6eO3LLprj72.CXuvZPjw2/NdGRxtgooe9N7c2SaC7/QCt2	ROLE_USER
qwerty@q.q	$2a$10$KKUZhI1Bmhsy6P5lyGsS5ubEFRGVGgyY/SwVyw0LDIbvzX.uQQ8l2	ROLE_USER
admin@admin.admin	$2y$10$Gc3PmqWnjBM.DEUGPQD7Qul5cZDILI7aMa6azsf6TZ23HtaYtH3n6	ROLE_ADMIN
pp@pp.pp	$2a$10$p5xheRbf3kkorSvm.0Ba2uhl4URfZDjqByS2kTgac4KdNS9r6hC0e	ROLE_USER
aaaa@aaa.com	$2a$10$x3/AEKqtCA65OeWaBcIW5ukCB/STN91uU8N3UgZmju35YzvNEEVUK	ROLE_USER
some@some.some	$2a$10$YUyDEPcNLOFbJtDdzN7tvegzNoPGBI3VEhGAySSvh3/o.6bRdZelO	ROLE_USER
new@new.new	$2a$10$/TiKM1dfkxDbHg/Kgcb1g.0cwnfxHfjfmH6o7qq7TP/.mC3M0diE.	ROLE_USER
old@old.old	$2a$10$te5mL/7vkSf4zaTXxMehpuiVmbwki15QfTAyam4D7Ip1Bh82IxvCe	ROLE_USER
meg0009@mail.ru	$2a$10$BJxwJKTn9r3i430lpIz7Z.06IL3wIia.weMc6sD8O8DY21YUJI/Sy	ROLE_USER
\.


--
-- Name: members_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.members_id_seq', 24, true);


--
-- Name: person_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.person_id_seq', 26, true);


--
-- Name: record_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.record_id_seq', 31, true);


--
-- Name: tournament_id_seq; Type: SEQUENCE SET; Schema: public; Owner: postgres
--

SELECT pg_catalog.setval('public.tournament_id_seq', 5, true);


--
-- Name: members members_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.members
    ADD CONSTRAINT members_pkey PRIMARY KEY (id);


--
-- Name: person person_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.person
    ADD CONSTRAINT person_pkey PRIMARY KEY (id);


--
-- Name: record record_member_tournament_key; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.record
    ADD CONSTRAINT record_member_tournament_key UNIQUE (member, tournament);


--
-- Name: record record_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.record
    ADD CONSTRAINT record_pkey PRIMARY KEY (id);


--
-- Name: tournament tournament_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.tournament
    ADD CONSTRAINT tournament_pkey PRIMARY KEY (id);


--
-- Name: users users_pkey; Type: CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.users
    ADD CONSTRAINT users_pkey PRIMARY KEY (user_name);


--
-- Name: record member_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.record
    ADD CONSTRAINT member_id FOREIGN KEY (member) REFERENCES public.members(id) ON DELETE CASCADE;


--
-- Name: record tournament_id; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.record
    ADD CONSTRAINT tournament_id FOREIGN KEY (tournament) REFERENCES public.tournament(id) ON DELETE CASCADE NOT VALID;


--
-- Name: members user_name; Type: FK CONSTRAINT; Schema: public; Owner: postgres
--

ALTER TABLE ONLY public.members
    ADD CONSTRAINT user_name FOREIGN KEY (user_name) REFERENCES public.users(user_name) ON UPDATE CASCADE ON DELETE CASCADE NOT VALID;


--
-- PostgreSQL database dump complete
--

